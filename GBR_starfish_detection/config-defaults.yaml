  
# data
data_dir:
  value: "C:/DL_Lab/GBR_dataset_896/" #"/content/"
test_split:
  value: 0.2 
img_width:
  value: 1280
img_height:
  value: 720
dataset_slice_start:
  value: 20
dataset_slice_end:
  value: 235 #00


# train
epochs:
  value: 50
batch_size:
  value: 2 #2
optimizer:
  value: "sgd"
learning_rate:
  value: 0.00001
learning_rate_decay:
  value: 1
momentum:
  value: 0.9

loss_function:
  value: "yolo"  # "custom"

# settings for custom loss
objectness_loss:
  value: "weighted_bce"  # select from bce, mse, weighted_bce
bce_weighting:
  value: 20 # positive value, >1 increases the loss for False Negatives by this factor
bbox_loss:
  value: "giou" # "mse", "mae", "giou"
objectness_loss_weighting: # weights the loss overall, compared to bbox loss
  value: 1

# settings for yolo loss
yolo_weight_center:
  value: 1
yolo_weight_size:
  value: 2
yolo_weight_obj:
  value: 1
yolo_weight_noobj:
  value: 0.1

# architecture
cnn_input_shape:
  value: [896, 896, 3]
architecture:
  value: "resnet50" 
grid_size:
  value: 7
trainable:
  value: "none"  # "full" : all resnet layers trainable, "last": last 4 layers of resnet trainable, "none": resnet not trainable
head_channels:
  value: 1024  # if a hidden conv layer is required after the resnet base-model and with how many layers
dropout:
  value: 0.5 # dropout between last hidden conv layer and the output conv layer


# evaluate
wandb_run:
  value: "stuttgartteam8/protect_gbr/34j65rft" # "stuttgartteam8/protect_gbr/1rmzs2cj"  "stuttgartteam8/protect_gbr/136q0aks"
eval_dataset:
  value: "train"
eval_samples:
  value: 900
bbox_confidence_threshold:
  value: 0.0